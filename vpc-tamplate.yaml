AWSTemplateFormatVersion: "2010-09-09"
Description:
  "VPC Template with two subnets one private and one public"
Resources:
  myVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: "192.168.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-myVpc"]]

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1a
      VpcId: !Ref myVpc
      CidrBlock: "192.168.0.0/24"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-east-1b
      VpcId: !Ref myVpc
      CidrBlock: "192.168.1.0/24"
      Tags:
        - Key: Name
          Value: PrivateSubnet

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: myVpc
    Properties:
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-IGW"]]

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref myVpc
      InternetGatewayId: !Ref InternetGateway

  ElasticIp:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-EIP"]]

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt: [ElasticIp, AllocationId]
      SubnetId: !Ref PrivateSubnet
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-NatGateway"]]

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVpc
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-RouteTable"]]

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn:
      - InternetGateway
      - InternetGatewayAttachment
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVpc
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref "AWS::StackName", "-PrivateRouteTable"]]

  PrivateRoute:
    Type: AWS::EC2::Route
    DependsOn:
      - NatGateway
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref NatGateway
      RouteTableId: !Ref PrivateRouteTable

  PublicRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  PrivateRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet

Outputs:
  VpcId:
    Value: !Ref myVpc
    Export:
      Name: VpcId
  PublicSubnetId:
    Value: !Ref PublicSubnet
    Export:
      Name: PublicSubnet
  PrivateSubnetId:
    Value: !Ref PrivateSubnet
    Export:
      Name: PrivateSubnet
